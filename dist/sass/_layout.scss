@import "custom-variables";
@import "default-classes";

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
  display: none !important;
}

#loading{
	background-color: $generalColor;
	height: 100%;
	width: 100%;
	position: fixed;
	z-index: 99999;
	margin-top: 0px;
	top: 0px;
}

#loading.ng-enter, #loading.ng-leave {
	transition: opacity 0.3s linear, z-index 0.1s linear .4s;
}

#loading.ng-enter,
#loading.ng-leave.ng-leave-active {
	opacity:0;
	z-index: -1;
}

#loading.ng-leave,
#loading.ng-enter.ng-enter-active {
	opacity:1;
	z-index: 99999;
}

#loading-center{
	width: 100%;
	height: 100%;
	position: relative;
}

#loading-center-absolute {
	position: absolute;
	left: 50%;
	top: 50%;
	height: 200px;
	width: 200px;
	margin-top: -100px;
	margin-left: -100px;
}

#object{
	width: 80px;
	height: 80px;
	background-color: #FFF;
	-webkit-animation: animate 1s infinite ease-in-out;
	animation: animate 1s infinite ease-in-out;
	margin-right: auto;
	margin-left: auto;
	margin-top: 60px;
}

@-webkit-keyframes animate {
  0% { -webkit-transform: perspective(160px); }
  50% { -webkit-transform: perspective(160px) rotateY(-180deg); }
  100% { -webkit-transform: perspective(160px) rotateY(-180deg) rotateX(-180deg); }
}

@keyframes animate {
  0% { 
    transform: perspective(160px) rotateX(0deg) rotateY(0deg);
    -webkit-transform: perspective(160px) rotateX(0deg) rotateY(0deg); 
  } 50% { 
    transform: perspective(160px) rotateX(-180deg) rotateY(0deg);
    -webkit-transform: perspective(160px) rotateX(-180deg) rotateY(0deg) ;
  } 100% { 
    transform: perspective(160px) rotateX(-180deg) rotateY(-180deg);
    -webkit-transform: perspective(160px) rotateX(-180deg) rotateY(-180deg);
  }
}

body {
	color: $generalBodyColor;
}

.container {
	max-width: $containerWidth;
	padding: 0 15px;
	margin: 0 auto;
}

.flex-container {
	display: flex;
	&.direction-row {
		flex-direction: row;
	}
	&.space-between {
		justify-content: space-between;
	}
}

.icon {
	display: flex;
}

.header {
	background: $generalColor;
	padding: 3.5em 0;
	height: 100px;
	position: relative;
}

.add-task {
	font-size: 1em;
	width: 6em;
	height: 6em;
	background: $newTaskBg;
	border-radius: 50%;
	transform: translateY(55%);
	color: #fff;
	@extend %flex-row;
	justify-content: center;
	
	span {
		font-size: 3em;
	}
}

.user-nav {
	@extend %flex-row;
	font-size: 3em;
	color: #fff;

	a {
		line-height: .8;
		& + a {
			margin-left: 35px;
		}
	}
}

#colors {
	position: absolute;
	top: 100px;
	right: 124px;
	width: 60px;
	background-color: #fff;
	border: 2px solid $generalColor;
	border-top: 0;
	box-shadow: 0px 0px 7.36px 0.64px rgba(0, 0, 0, .1);
	opacity: 0;
	z-index: -1;
	transition: all .2s linear;
	&.open {
		z-index: 99;
		opacity: 1;
	}
}

li {
	margin: 1em .5em;
}

.color {
	width: 40px;
	height: 40px;
	margin: 0 auto;
	cursor: pointer;
}

.theme-dark {
	background-color: #009688;
}

.theme-light {
	background-color: #5cd8b6;
}

.theme-brown {
	background-color: #795548;
}

.theme-gray {
	background-color: #607d8b;
}

.theme-default {
	background-color: $generalColor;
}

//  MAIN START
.toggle-task-type {
	padding: 5em 0;
	@media (min-width: 1024px) {
		padding: 10em 0 8em;
	}
	@media (max-height: 480px) {
		display: none;
	}
	.toggle-task-list {
		@extend %flex-row;

		a {
			color: #bebebe;
			font-size: 1.8em;
			font-family: 'sf_ui_textsemibold';
			@media (min-width: 1024px) {
				font-size: 3em;
			}
			&.active {
				color: $generalColor;
			}
			& + a {
				margin-left: 5px;
				&::before {
					content: "/";
					display: inline-block;
					margin-right: 5px;
					color: #bebebe;
				}
			}
		}
	}
}

.main {
	padding-top: 216px;
	@media (min-width: 1024px) {
		padding-top: 310px;
	}
	@media (max-height: 480px) {
		padding-top: 140px;
	}
}

.date-today {
	background: $generalColor;
	padding: .8em 2em;
	color: #fff;
	@extend %flex-row;
	align-items: baseline;
	@media (min-width: 1024px) {
		padding: 1.6em 11em;
	}
	
	.date {
		font-family: 'sf_ui_displaybold';
		font-size: 3.6em;
		@media (min-width: 1024px) {
			font-size: 5em;
		}
	}
	
	.month {
		font-size: 1.8em;
		@media (min-width: 1024px) {
			font-size: 3em;
		}
	}
}

.all-task-wrap {
	padding: 4em 0;
	position: relative;
	&::before {
		content: "";
		position: absolute;
		top: 6em;
		left: 2em;
		bottom: 0;
		width: 0;
		border-left: 2px dashed $generalColor;
		z-index: -1;
		@media (min-width: 1024px) {
			top: 8.5em;
			left: 2.5em;
		}
	}
	@media (min-width: 1024px) {
		padding: 5em 0;
	}
}

.task-wrap {
	display: flex;
	flex-direction: column;
	& + .task-wrap {
		margin-top: 4em;
		@media (min-width: 1024px) {
			margin-top: 5em;
		}
	}
	@media (min-width: 1110px) {
		flex-direction: row;
	}
	
	.task-icon {
		width: 20px;
		@media (min-width: 1024px) {
			width: 40px;
		}
	}
}

.task {
	width: 100%;
	position: relative;
	padding-left: 5.4em;
	max-width: calc( 600px + 5.4em );
	&.open {
		.task-content-wrap {
			display: block;
		}
		.task-header {
			border-radius: 1em 1em 0 0;
		}
	}
	&.warning {
		.task-header {
			background: $warningBg;
		}
	}
	&.success {
		.task-header {
			background: $successBg;
		}
	}
	&:not([class~="open"]) .task-all-content {
		box-shadow: 3px 4px 7.36px 0.64px rgba(0, 0, 0, .08);
	}
	@media (min-width: 1024px) {
		padding-left: 11.2em;
		max-width: calc( 600px + 11.2em );
	}
	
	.task-all-content {
		border-radius: 1em;
		box-shadow: 0 5px 16.17px 4.83px rgba(0, 2, 3, .08);
	}
	
	.task-header {
		padding: 1.3em 1.5em;
		background: $newTaskBg;
		border-radius: 1em;
		color: #fff;
		font-family: 'sf_ui_textlight';
		cursor: pointer;
		@extend %flex-row;
		justify-content: space-between;
		align-items: center;
		@media (min-width: 1024px) {
			padding: 2em 3em;
		}
		.slide-toggle-btn {
			font-size: .6em;
			@media (min-width: 1024px) {
				font-size: 1.6em;
			}
		}
		.short-task-text {
			font-size: 1.4em;
			flex-basis: 80%;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
			@media (min-width: 1024px) {
				font-size: 3em;
			}
		}
		.remove {
			@media (min-width: 1024px) {
				font-size: 2.5em;
			}
		}
	}
	.task-content-wrap {
		display: none;
		padding: 1.5em;
		border-radius: 0 0 1em 1em;
		background: #fff;
		color: $taskColor;
		font-family: 'sf_ui_textlight';
		
		@media (min-width: 1024px) {
			padding: 3em;
		}
		
		.task-icon {
			width: 20px;
			@media (min-width: 1024px) {
				width: 40px;
			}
			
			.circle {
				width: 20px;
				height: 20px;
				border: 1px solid $awaitingColor;
				border-radius: 50%;
				display: inline-block;
				@media (min-width: 1024px) {
					width: 30px;
					height: 30px;
				}
			}
		}
		
		.icon {
			font-size: 2em;
			@media (min-width: 1024px) {
				font-size: 3em;
			}
		}
		
		.time-row {
			@extend %flex-row;
			align-items: center;
			
			.time {
				width: 90%;
				padding-left: 10px;
				font-family: 'sf_ui_textmedium';
				font-size: 1.8em;
				@media (min-width: 1024px) {
					font-size: 2.5em;
					padding-left: 5px;
				}
			}
		}
		
		.task-text-row {
			@extend %flex-row;
			p {
				width: 90%;
				padding-left: 10px;
				font-size: 1.4em;
				line-height: 1.3;
				word-break: break-all;
				@media (min-width: 1024px) {
					font-size: 2.5em;
					line-height: 1.2;
					padding-left: 5px;
				}
			}
		}
		
		.task-check-row {
			@media (min-width: 1024px) {
				margin-top: 1.7em;
			}
			form {
				@extend %flex-row;
				align-items: center;
			}
			
			input[type="checkbox"] {
				display: none;
			}
			
			label {
				padding-left: 10px;
				font-size: 1.4em;
				line-height: 1.3;
				@media (min-width: 1024px) {
					font-size: 2.5em;
					padding-left: 5px;
				}
			}
		}
		
		.task-edit-row {
			@extend %flex-row;
			justify-content: flex-end;
			@media (min-width: 1024px) {
				margin-top: 3em;
			}
		}
		
		& > * {
			& + * {
				margin-top: 1.5em;
				@media (min-width: 1024px) {
					margin-top: 2.5em;
				}
			}
		}
	}
}

.info-block {
	@extend %flex-row;
	align-items: center;
	padding-left: 5.4em;
	margin-top: 2em;

	&.warning {
		color: $warningBg;
	}
	&.success {
		color: $successBg;
	}

	@media (min-width: 1024px) {
		margin-top: 3em;
		padding-left: 11.2em;
	}
	
	@media (min-width: 1110px) {
		margin-top: 0;
		margin-left: 1.6em;
		align-items: initial;
		padding: 1.6em 1.6em 0 5.4em;
	}
	
	.info-icon {
		width: 30px;
		@media (min-width: 1024px) {
			width: 40px;
		}

		.icon {
			font-size: 3em;
			@media (min-width: 1024px) {
				font-size: 4em;
			}
		}
	}
	
	.info-text {
		font-family: 'sf_ui_textregular';
		font-size: 1.6em;
		padding-left: 20px;
		line-height: 1.125;
		
		@media (min-width: 1024px) {
			font-size: 2.5em;
			padding-left: 30px;
		}
		
		@media (min-width: 1110px) {
			font-size: 3em;
		}
	}
}

.to-do-time {
	width: 3.3333em;
	height: 3.3333em;
	font-size: 1.2em;
	background: $generalColor;
	color: #fff;
	@extend %flex-row;
	justify-content: center;
	align-items: center;
	border-radius: 50%;
	position: absolute;
	left: 0;
	@media (min-width: 1024px) {
		font-size: 1.4em;
		width: 3.6em;
		height: 3.6em;
		margin-top: 10px;
	}
}
//  MAIN END

// task-edit style
.overlay {
	background-color: rgba(0, 0, 0, .83);
	position: fixed;
	z-index: -1;
	opacity: 0;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	transition: all .5s linear;
	&.open {
		z-index: 9999;
		opacity: 1;
	}
}

.edit-task {
	background: #fff;
	width: 100%;
	padding: 5em 0 3em;
	height: auto;
	z-index: -1;
	opacity: 0;
	transform: translateY(100vh);
	position: fixed;
	bottom: 0;
	transition: all .5s linear;
	&.open {
		z-index: 9999;
		opacity: 1;
		transform: translateY(0vh);
	}
	@media (min-width: 1024px) {
		height: 60vh;
		overflow: auto;
		padding: 5em 0;
	}
	@media (max-height: 630px) and (max-width: 1023px) {
		top: 0;
		overflow: auto;
	}
	
	.close-edit {
		display: none;
		position: absolute;
		top: 20px;
		right: 20px;
		color: #9d9d9d;
		cursor: pointer;
		@media (max-height: 630px) {
			display: block;
			font-size: 1.6em;
		}
		@media (min-width: 1024px) {
			font-size: 2em;
		}
		
		&:hover {
			color: $generalColor;
		}
	}
	
	.title {
		color: #767676;
		margin-bottom: 4em;
		span {
			font-size: 1.8em;
		}
		@media (min-width: 1024px) {
			margin-bottom: 2em;
		}
	}
	
	.input-group {
		width: 100%;
		&.flex-container {
			flex-direction: column;
			@media (min-width: 1024px) {
				flex-direction: row;
			}
		}
	}
	
	.task-bell {
		@extend %flex-row;
		font-size: 1.6em;
		color: $taskColor;
		align-items: center;
	}
	
	.icon-bell {
		font-size: 1.8em;
		color: $generalColor;
		margin-right: 1em;
		@media (min-width: 1024px) {
			margin-right: .7em;
		}
	}
	
	input {
		font-size: 3em;
		margin: .67em 0;
		padding-left: 2.3em;
		@media (min-width: 1024px) {
			margin: 0;
			padding-left: 2em;
		}
	}
	
	.textarea-wrap {
		display: flex;
		flex-direction: column;
		width: 100%;
		max-width: 710px;
		margin-top: 2em;
		@media (min-width: 1024px) {
			margin-top: 3em;
		}
		
		textarea {
			border-bottom: 1px solid #9d9d9d;
			width: 100%;
			height: 60px;
			order: 2;
			font-family: 'sf_ui_textregular';
			font-size: 1.4em;
			color: $taskColor;
			padding: 0;
			&:focus {
				border-color: $generalColor;
				& + label {
					color: $generalColor;
				}
			}
		}
		
		label {
			order: 1;
			font-family: 'sf_ui_textlight';
			font-size: 1.2em;
			color: #424242;
			@media (min-width: 1024px) {
				font-size: 1.4em;
			}
		}
		
		.symbol-count {
			order: 3;
			text-align: right;
			margin-top: 4em;
			span {
				font-size: 1.2em;
			}
			@media (min-width: 1024px) {
				margin-top: 2em;
			}
		}
	}
	
	.edit-task-btn-wrap {
		margin-top: 6em;
		@media (min-width: 740px) {
			text-align: right;
			margin-top: 1em;
		}
		.edit-task-btn {
			padding: .37em;
			font-family: 'sf_ui_textsemibold';
			font-size: 2.4em;
			@media (min-width: 740px) {
				width: 290px;
			}
		}
	}
}
